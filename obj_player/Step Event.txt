if !place_meeting(x,y+1,obj_block) // if we are in the air
{
    grav = .5; // set the gravity to .5
    vspd += grav; // add .5 to our vspd once every step
}
else // else if we are on the ground
{
    grav = 0; // set the gravity to 0
    vspd = 0; // set vspd to 0 to stop moving
    if keyboard_check_pressed(vk_space) // since we are on the ground, we can handle jumping here, so check if we pressed up
    {
        vspd = -8; // set the vspd to -8, which will make us jump
    }
}
if keyboard_check_released(vk_space) // if we released the up button while in the in air
{
    vspd *= .5; // divide our vspd by 2, creating a smooth type of variable jumping
}
if vspd > 8 // we don't want to fall too fast, so lets limit our vspd
{
    vspd = 8; // note that if you want to be able to fall fast, you can remove this without affecting the code (but I wouldn't)
}
repeat(abs(vspd)) // we want to check for a collision every pixel, so we use a repeat() function to check every pixel while falling
{
    if !place_meeting(x,y+sign(vspd),obj_block) // vspd can be negative or positive, so we check 1 pixel above or below, depending on which direction we are going
    {
        y += sign(vspd); // add to our y value 1 pixel at a time, letting use check for a collision every pixel
    }
    else // else if we hit a block
    {
        vspd = 0; // stop moving vertically
    }
}
hspd = (keyboard_check(vk_right)-keyboard_check(vk_left))*4; // a nice little trick that will set our hspd to +4 or -4 depending what button we are holding
repeat(abs(hspd)) // same as the vspd, we want to check for a collision at every pixel we move
{
    if !place_meeting(x+sign(hspd),y,obj_block) // if there is no block to our left or right
    {
         x += sign(hspd); // add to our x value depending on which way we are going
    }
}

if x>xprevious then { image_speed = 1; sprite_index= spr_player_running} 
if x<xprevious then { image_speed = 1; sprite_index= spr_player_running2}
if x=xprevious then { image_speed = 0; sprite_index= spr_player_idle}

if !place_free(x,y+1) then {//Check if the player is on the ground...
if x>xprevious then {image_speed = 1; sprite_index = spr_player_running}
if x<xprevious then {image_speed = 1; sprite_index = spr_player_running2}
if x=xprevious then {image_speed = 0; image_index = 0}}

else {//If the player is not on the ground...
if x>xprevious then {//Moving right...
if y<yprevious then {image_speed = 1; sprite_index = spr_player_jump}//Moving up...
if y>yprevious then {image_speed = 1; sprite_index = spr_player_fall}}//Moving down...
if x<xprevious then {//Moving left...
if y<yprevious then {image_speed = 1; sprite_index = spr_player_jumpL}//Moving up...
if y>yprevious then {image_speed = 1; sprite_index = spr_player_fallL}}//Moving down...
if x=xprevious then {image_speed = 0; image_index = 0}}
